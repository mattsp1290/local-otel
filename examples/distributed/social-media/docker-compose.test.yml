version: '3.8'

services:
  # API Gateway / Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - user-profile-service
    networks:
      - social-media-net

  # Auth Service - Node.js with OAuth
  auth-service:
    build: ./auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://user:password@auth-db:5432/auth
      - REDIS_URL=redis://auth-redis:6379
      - JWT_SECRET=your-jwt-secret-here
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - GITHUB_CLIENT_ID=your-github-client-id
      - GITHUB_CLIENT_SECRET=your-github-client-secret
      - OTEL_SERVICE_NAME=auth-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - STATSD_HOST=statsd
      - STATSD_PORT=8125
    depends_on:
      - auth-db
      - auth-redis
    networks:
      - social-media-net
      - telemetry-net

  # User Profile Service - Python FastAPI
  user-profile-service:
    build: ./user-profile-service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@user-db:5432/profiles
      - REDIS_URL=redis://profile-redis:6379
      - SERVICE_NAME=user-profile-service
      - OTLP_ENDPOINT=http://otel-collector:4318/v1/traces
      - STATSD_HOST=statsd
      - STATSD_PORT=8125
      - AUTH_SERVICE_URL=http://auth-service:3001
    depends_on:
      - user-db
      - profile-redis
    networks:
      - social-media-net
      - telemetry-net

  # Databases
  auth-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=auth
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - social-media-net

  user-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=profiles
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - social-media-net

  # Redis Instances
  auth-redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - social-media-net

  profile-redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - social-media-net

volumes:
  auth-db-data:
  user-db-data:

networks:
  social-media-net:
    driver: bridge
  telemetry-net:
    external: true
    name: webapi_webapi-network
