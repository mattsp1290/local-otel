# Enhanced OpenTelemetry Collector Configuration with Dual Export (Files + SigNoz)
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  
  statsd:
    endpoint: 0.0.0.0:8125
    aggregation_interval: 10s
    enable_metric_type: true
    is_monotonic_counter: false

  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8889']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 1s

  attributes:
    actions:
      - key: service.name
        value: canary-api
        action: upsert
      - key: service.version
        from_attribute: version
        action: insert
      - key: deployment.environment
        value: local-development
        action: upsert

  filter:
    metrics:
      include:
        match_type: regexp
        metric_names:
          - canary\..*
          - otel\..*
          - system\..*

  resource:
    attributes:
      - key: host.name
        value: local-dev
        action: upsert
      - key: telemetry.sdk.name
        value: opentelemetry
        action: upsert

exporters:
  # ===== FILE EXPORTERS (Existing) =====
  file/traces:
    path: /data/traces/traces.jsonl
    format: json

  file/metrics:
    path: /data/metrics/metrics.jsonl
    format: json

  file/logs:
    path: /data/logs/logs.jsonl
    format: json

  file/traces_json:
    path: /data/traces/traces_detailed.json
    format: json

  # ===== PROMETHEUS EXPORTER (Existing) =====
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      environment: local-development
      service: canary-api

  # ===== JAEGER EXPORTER (Existing) =====
  otlp/jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # ===== SIGNOZ EXPORTERS (New) =====
  otlp/signoz:
    endpoint: signoz-otel-collector:4317
    tls:
      insecure: true

  # ===== DEBUG EXPORTER (Existing) =====
  debug:
    verbosity: normal
    sampling_initial: 5
    sampling_thereafter: 200

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

  pprof:
    endpoint: 0.0.0.0:1777

  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    # Dual export for traces: Files + Jaeger + SigNoz
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, attributes, resource]
      exporters: [file/traces, file/traces_json, otlp/jaeger, otlp/signoz, debug]

    # Dual export for metrics: Files + Prometheus + SigNoz
    metrics:
      receivers: [otlp, statsd, prometheus]
      processors: [memory_limiter, batch, attributes, filter, resource]
      exporters: [file/metrics, prometheus, otlp/signoz, debug]

    # Dual export for logs: Files + SigNoz
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, attributes, resource]
      exporters: [file/logs, otlp/signoz, debug]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
